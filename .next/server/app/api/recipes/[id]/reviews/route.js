"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/recipes/[id]/reviews/route";
exports.ids = ["app/api/recipes/[id]/reviews/route"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute&page=%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute.js&appDir=C%3A%5CUsers%5CSoftware.Engineer51%5CDocuments%5CGitHub%5CASE_2024_GROUP_D%5CASE_2024_GROUP_D%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CSoftware.Engineer51%5CDocuments%5CGitHub%5CASE_2024_GROUP_D%5CASE_2024_GROUP_D&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute&page=%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute.js&appDir=C%3A%5CUsers%5CSoftware.Engineer51%5CDocuments%5CGitHub%5CASE_2024_GROUP_D%5CASE_2024_GROUP_D%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CSoftware.Engineer51%5CDocuments%5CGitHub%5CASE_2024_GROUP_D%5CASE_2024_GROUP_D&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_Software_Engineer51_Documents_GitHub_ASE_2024_GROUP_D_ASE_2024_GROUP_D_app_api_recipes_id_reviews_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/recipes/[id]/reviews/route.js */ \"(rsc)/./app/api/recipes/[id]/reviews/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/recipes/[id]/reviews/route\",\n        pathname: \"/api/recipes/[id]/reviews\",\n        filename: \"route\",\n        bundlePath: \"app/api/recipes/[id]/reviews/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\Software.Engineer51\\\\Documents\\\\GitHub\\\\ASE_2024_GROUP_D\\\\ASE_2024_GROUP_D\\\\app\\\\api\\\\recipes\\\\[id]\\\\reviews\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_Software_Engineer51_Documents_GitHub_ASE_2024_GROUP_D_ASE_2024_GROUP_D_app_api_recipes_id_reviews_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/recipes/[id]/reviews/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZyZWNpcGVzJTJGJTVCaWQlNUQlMkZyZXZpZXdzJTJGcm91dGUmcGFnZT0lMkZhcGklMkZyZWNpcGVzJTJGJTVCaWQlNUQlMkZyZXZpZXdzJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGcmVjaXBlcyUyRiU1QmlkJTVEJTJGcmV2aWV3cyUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNTb2Z0d2FyZS5FbmdpbmVlcjUxJTVDRG9jdW1lbnRzJTVDR2l0SHViJTVDQVNFXzIwMjRfR1JPVVBfRCU1Q0FTRV8yMDI0X0dST1VQX0QlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q1NvZnR3YXJlLkVuZ2luZWVyNTElNUNEb2N1bWVudHMlNUNHaXRIdWIlNUNBU0VfMjAyNF9HUk9VUF9EJTVDQVNFXzIwMjRfR1JPVVBfRCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDaUY7QUFDOUo7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hc2VfZ3JvdXAtZC8/YjJjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxTb2Z0d2FyZS5FbmdpbmVlcjUxXFxcXERvY3VtZW50c1xcXFxHaXRIdWJcXFxcQVNFXzIwMjRfR1JPVVBfRFxcXFxBU0VfMjAyNF9HUk9VUF9EXFxcXGFwcFxcXFxhcGlcXFxccmVjaXBlc1xcXFxbaWRdXFxcXHJldmlld3NcXFxccm91dGUuanNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3JlY2lwZXMvW2lkXS9yZXZpZXdzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvcmVjaXBlcy9baWRdL3Jldmlld3NcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3JlY2lwZXMvW2lkXS9yZXZpZXdzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcU29mdHdhcmUuRW5naW5lZXI1MVxcXFxEb2N1bWVudHNcXFxcR2l0SHViXFxcXEFTRV8yMDI0X0dST1VQX0RcXFxcQVNFXzIwMjRfR1JPVVBfRFxcXFxhcHBcXFxcYXBpXFxcXHJlY2lwZXNcXFxcW2lkXVxcXFxyZXZpZXdzXFxcXHJvdXRlLmpzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9yZWNpcGVzL1tpZF0vcmV2aWV3cy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute&page=%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute.js&appDir=C%3A%5CUsers%5CSoftware.Engineer51%5CDocuments%5CGitHub%5CASE_2024_GROUP_D%5CASE_2024_GROUP_D%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CSoftware.Engineer51%5CDocuments%5CGitHub%5CASE_2024_GROUP_D%5CASE_2024_GROUP_D&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/recipes/[id]/reviews/route.js":
/*!***********************************************!*\
  !*** ./app/api/recipes/[id]/reviews/route.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../db */ \"(rsc)/./db.js\");\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_db__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _review__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../review */ \"(rsc)/./app/review.js\");\n/* harmony import */ var _review__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_review__WEBPACK_IMPORTED_MODULE_2__);\n//api/recipes/[id]/reviews/routes.js\n\n\n\nasync function validateRecipe(recipeId) {\n    const db = await _db__WEBPACK_IMPORTED_MODULE_1___default()();\n    if (!recipeId) {\n        throw new Error(\"Recipe ID is required\");\n    }\n    const recipe = await db.collection(\"recipes\").findOne({\n        _id: recipeId\n    });\n    if (!recipe) {\n        throw new Error(\"Recipe not found\");\n    }\n    return recipe;\n}\n// Create review\nasync function POST(request) {\n    try {\n        //const body2 = await request.text();  // Get the raw body as text for debugging\n        //console.log(\"Raw request body:\", body2);  // Log the body for debugging\n        const body = await request.json(); // Parse JSON from the request body\n        // Destructure and log each field individually\n        const { rating, comment, recipeId } = body;\n        console.log(\"recipeId:\", recipeId);\n        console.log(\"rating:\", rating);\n        console.log(\"comment:\", comment);\n        // Validate the recipe ID\n        await validateRecipe(recipeId);\n        // Connect to database and create review\n        const db = await _db__WEBPACK_IMPORTED_MODULE_1___default()();\n        const review = await (0,_review__WEBPACK_IMPORTED_MODULE_2__.createReview)(db, body);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(review, {\n            status: 201\n        });\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || \"Internal server error\"\n        }, {\n            status: error.message.includes(\"not found\") ? 404 : 500\n        });\n    }\n}\n// Update review\n// Update review\nasync function PUT(request) {\n    try {\n        // Retrieve `editId` from the query parameters\n        const url = new URL(request.url);\n        const reviewId = url.searchParams.get(\"editId\");\n        if (!reviewId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Review ID is required for update\"\n            }, {\n                status: 400\n            });\n        }\n        const body = await request.json();\n        const db = await _db__WEBPACK_IMPORTED_MODULE_1___default()();\n        await (0,_review__WEBPACK_IMPORTED_MODULE_2__.updateReview)(db, reviewId, body);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Review updated successfully\"\n        });\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Delete review\nasync function DELETE(request) {\n    try {\n        const url = new URL(request.url);\n        const deleteId = url.searchParams.get(\"deleteId\");\n        if (!deleteId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"deleteId query parameter is required\"\n            }, {\n                status: 400\n            });\n        }\n        const db = await _db__WEBPACK_IMPORTED_MODULE_1___default()();\n        await (0,_review__WEBPACK_IMPORTED_MODULE_2__.deleteReview)(db, deleteId);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: \"Review deleted successfully\"\n        });\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Get reviews for a recipe\nasync function GET(request, { params }) {\n    try {\n        const { id } = params;\n        const recipeId = id;\n        await validateRecipe(recipeId);\n        console.log(\"Did we get ValidateRecipe?\");\n        // Get query parameters\n        const searchParams = request.nextUrl.searchParams;\n        const sortOptions = {\n            sortBy: searchParams.get(\"sortBy\") || \"date\",\n            order: searchParams.get(\"order\") || \"desc\"\n        };\n        const db = await _db__WEBPACK_IMPORTED_MODULE_1___default()();\n        const reviews = await (0,_review__WEBPACK_IMPORTED_MODULE_2__.getRecipeReviews)(db, recipeId, sortOptions);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(reviews);\n    } catch (error) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: error.message || \"Internal server error\"\n        }, {\n            status: error.message.includes(\"not found\") ? 404 : error.message.includes(\"required\") ? 400 : 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/recipes/[id]/reviews/route.js\n");

/***/ }),

/***/ "(rsc)/./app/review.js":
/*!***********************!*\
  !*** ./app/review.js ***!
  \***********************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst _mongodb = __webpack_require__(/*! mongodb */ \"mongodb\");\nasync function createReview(db, reviewData) {\n    const collection = db.collection(\"recipes\");\n    const recipeId = reviewData.recipeId;\n    try {\n        await validateRecipe(db, recipeId);\n    } catch (error) {\n        throw new Error(`Recipe validation error: ${error.message}`);\n    }\n    const review = {\n        _id: new _mongodb.ObjectId(),\n        rating: Number(reviewData.rating),\n        comment: reviewData.comment,\n        username: reviewData.username || \"Anonymous\",\n        createdAt: new Date(),\n        updatedAt: new Date()\n    };\n    try {\n        const updateResult = await collection.updateOne({\n            _id: recipeId\n        }, {\n            $push: {\n                reviews: review\n            },\n            $set: {\n                updatedAt: new Date()\n            }\n        });\n        if (updateResult.modifiedCount === 0) {\n            throw new Error(\"Failed to add review to the recipe\");\n        }\n    } catch (error) {\n        throw new Error(`Database update error: ${error.message}`);\n    }\n    try {\n        await updateAverageRating(db, recipeId);\n    } catch (error) {\n        throw new Error(`Error updating average rating: ${error.message}`);\n    }\n    return review;\n}\nasync function validateRecipe(db, recipeId) {\n    const recipe = await db.collection(\"recipes\").findOne({\n        _id: recipeId\n    });\n    if (!recipe) {\n        throw new Error(\"Recipe not found\");\n    }\n}\nasync function updateAverageRating(db, recipeId) {\n    const collection = db.collection(\"recipes\");\n    try {\n        const recipe = await collection.findOne({\n            _id: recipeId\n        }, {\n            projection: {\n                reviews: 1\n            }\n        });\n        if (!recipe || !recipe.reviews || recipe.reviews.length === 0) {\n            await collection.updateOne({\n                _id: recipeId\n            }, {\n                $set: {\n                    averageRating: 0,\n                    reviewCount: 0\n                }\n            });\n            return;\n        }\n        const totalRating = recipe.reviews.reduce((sum, review)=>sum + review.rating, 0);\n        const averageRating = Number((totalRating / recipe.reviews.length).toFixed(1));\n        await collection.updateOne({\n            _id: recipeId\n        }, {\n            $set: {\n                averageRating,\n                reviewCount: recipe.reviews.length\n            }\n        });\n    } catch (error) {\n        throw new Error(`Error updating average rating: ${error.message}`);\n    }\n}\nasync function updateReview(db, reviewId, updateData) {\n    const collection = db.collection(\"recipes\");\n    const objectId = typeof reviewId === \"string\" ? new _mongodb.ObjectId(reviewId) : reviewId;\n    const update = {\n        $set: {\n            \"reviews.$.rating\": Number(updateData.rating),\n            \"reviews.$.comment\": updateData.comment,\n            \"reviews.$.updatedAt\": new Date(),\n            updatedAt: new Date()\n        }\n    };\n    try {\n        const result = await collection.updateOne({\n            \"reviews._id\": objectId\n        }, update);\n        if (result.matchedCount === 0) {\n            throw new Error(\"Review not found\");\n        }\n        const recipe = await collection.findOne({\n            \"reviews._id\": objectId\n        }, {\n            projection: {\n                _id: 1\n            }\n        });\n        if (recipe) {\n            await updateAverageRating(db, recipe._id);\n        }\n        const updatedRecipe = await collection.findOne({\n            _id: recipe._id,\n            \"reviews._id\": objectId\n        }, {\n            projection: {\n                \"reviews.$\": 1\n            }\n        });\n        return updatedRecipe.reviews[0];\n    } catch (error) {\n        throw new Error(`Error updating review: ${error.message}`);\n    }\n}\nasync function deleteReview(db, reviewId) {\n    const collection = db.collection(\"recipes\");\n    try {\n        const objectId = typeof reviewId === \"string\" ? new _mongodb.ObjectId(reviewId) : reviewId;\n        const recipe = await collection.findOne({\n            \"reviews._id\": objectId\n        }, {\n            projection: {\n                _id: 1\n            }\n        });\n        if (!recipe) {\n            throw new Error(\"Review not found\");\n        }\n        const result = await collection.updateOne({\n            _id: recipe._id\n        }, {\n            $pull: {\n                reviews: {\n                    _id: objectId\n                }\n            },\n            $set: {\n                updatedAt: new Date()\n            }\n        });\n        await updateAverageRating(db, recipe._id);\n        return result;\n    } catch (error) {\n        throw new Error(`Error deleting review: ${error.message}`);\n    }\n}\nasync function getRecipeReviews(db, recipeId, sortOptions) {\n    const collection = db.collection(\"recipes\");\n    try {\n        const recipe = await collection.findOne({\n            _id: recipeId\n        }, {\n            projection: {\n                reviews: 1,\n                averageRating: 1,\n                reviewCount: 1\n            }\n        });\n        if (!recipe) {\n            throw new Error(\"Recipe not found\");\n        }\n        let reviews = recipe.reviews || [];\n        // Apply sorting based on the provided sort options\n        if (sortOptions) {\n            const { sortBy, order } = sortOptions;\n            reviews.sort((a, b)=>{\n                const multiplier = order.toLowerCase() === \"asc\" ? 1 : -1;\n                switch(sortBy.toLowerCase()){\n                    case \"rating\":\n                        return (a.rating - b.rating) * multiplier;\n                    case \"date\":\n                        return (new Date(a.createdAt) - new Date(b.createdAt)) * multiplier;\n                    default:\n                        return 0;\n                }\n            });\n        }\n        // Return reviews with additional recipe metadata\n        return {\n            reviews,\n            averageRating: recipe.averageRating || 0,\n            reviewCount: recipe.reviewCount || 0\n        };\n    } catch (error) {\n        throw new Error(`Error getting recipe reviews: ${error.message}`);\n    }\n}\nasync function getReviewStatistics(db, recipeId) {\n    const collection = db.collection(\"recipes\");\n    try {\n        const recipe = await collection.findOne({\n            _id: recipeId\n        }, {\n            projection: {\n                reviews: 1\n            }\n        });\n        if (!recipe || !recipe.reviews) {\n            return {\n                totalReviews: 0,\n                averageRating: 0,\n                ratingDistribution: [\n                    0,\n                    0,\n                    0,\n                    0,\n                    0\n                ]\n            };\n        }\n        const reviews = recipe.reviews;\n        const totalReviews = reviews.length;\n        const totalRating = reviews.reduce((sum, review)=>sum + review.rating, 0);\n        const averageRating = totalReviews > 0 ? Number((totalRating / totalReviews).toFixed(1)) : 0;\n        // Calculate rating distribution\n        const ratingDistribution = [\n            1,\n            2,\n            3,\n            4,\n            5\n        ].map((rating)=>reviews.filter((review)=>review.rating === rating).length);\n        return {\n            totalReviews,\n            averageRating,\n            ratingDistribution\n        };\n    } catch (error) {\n        throw new Error(`Error getting review statistics: ${error.message}`);\n    }\n}\nmodule.exports = {\n    createReview,\n    updateReview,\n    deleteReview,\n    getRecipeReviews,\n    updateAverageRating,\n    getReviewStatistics\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/review.js\n");

/***/ }),

/***/ "(rsc)/./db.js":
/*!***************!*\
  !*** ./db.js ***!
  \***************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nconst { MongoClient, ServerApiVersion } = __webpack_require__(/*! mongodb */ \"mongodb\");\nif (!process.env.MONGODB_URI) {\n    throw new Error('Invalid/Missing environment variable: \"MONGODB_URI\"');\n}\nconst uri = process.env.MONGODB_URI;\nconst options = {\n    serverApi: {\n        version: ServerApiVersion.v1,\n        deprecationErrors: true\n    },\n    maxPoolSize: 20\n};\nconst env = \"development\";\nlet clientPromise;\nif (env === \"development\") {\n    if (!global._mongoClientPromise) {\n        const client = new MongoClient(uri, options);\n        global._mongoClientPromise = client.connect();\n    }\n    clientPromise = global._mongoClientPromise;\n} else {\n    const client = new MongoClient(uri, options);\n    clientPromise = client.connect();\n}\nlet cachedDb = null; // Cache database instance for reuse\nasync function connectToDatabase() {\n    const client = await clientPromise;\n    const db = client.db(\"devdb\");\n    if (cachedDb) {\n        return cachedDb;\n    }\n    cachedDb = db; // Caches the DB connection for future requests\n    // Ensure indexes and reviews setup\n    await initializeIndexes(db);\n    await checkAndCreateReviews(db);\n    return db;\n}\nasync function initializeIndexes(db) {\n    const collection = db.collection(\"recipes\");\n    const errors = [];\n    try {\n        const existingIndexes = await collection.listIndexes().toArray();\n        const indexNames = existingIndexes.map((index)=>index.name);\n        if (indexNames.includes(\"recipe_search_index\")) {\n            try {\n                await collection.dropIndex(\"recipe_search_index\");\n                await new Promise((resolve)=>setTimeout(resolve, 1000));\n            } catch (error) {\n                if (error.code !== 27) {\n                    errors.push(`Failed to drop index recipe_search_index: ${error.message}`);\n                }\n            }\n        }\n        const indexOperations = [\n            {\n                operation: async ()=>{\n                    try {\n                        await collection.createIndex({\n                            title: \"text\",\n                            description: \"text\",\n                            tags: \"text\"\n                        }, {\n                            weights: {\n                                title: 10,\n                                description: 5,\n                                tags: 3\n                            },\n                            name: \"recipe_search_index\",\n                            background: true\n                        });\n                    } catch (error) {\n                        if (error.code !== 85) {\n                            throw error;\n                        }\n                    }\n                },\n                name: \"recipe_search_index\"\n            },\n            {\n                operation: ()=>collection.createIndex({\n                        category: 1\n                    }, {\n                        background: true\n                    }),\n                name: \"category_index\"\n            },\n            {\n                operation: ()=>collection.createIndex({\n                        tags: 1\n                    }, {\n                        background: true\n                    }),\n                name: \"tags_index\"\n            },\n            {\n                operation: ()=>collection.createIndex({\n                        \"ingredients.name\": 1\n                    }, {\n                        background: true\n                    }),\n                name: \"ingredients_index\"\n            },\n            {\n                operation: ()=>collection.createIndex({\n                        instructions: 1\n                    }, {\n                        background: true\n                    }),\n                name: \"instructions_index\"\n            },\n            {\n                operation: ()=>collection.createIndex({\n                        category: 1,\n                        createdAt: -1\n                    }, {\n                        background: true\n                    }),\n                name: \"category_date_index\"\n            },\n            {\n                operation: ()=>collection.createIndex({\n                        \"reviews.rating\": 1,\n                        \"reviews.createdAt\": -1\n                    }, {\n                        background: true\n                    }),\n                name: \"Reviews compound index\"\n            },\n            {\n                operation: ()=>collection.createIndex({\n                        \"reviews.userId\": 1\n                    }, {\n                        background: true\n                    }),\n                name: \"Review user index\"\n            },\n            {\n                operation: ()=>collection.createIndex({\n                        averageRating: -1\n                    }, {\n                        background: true\n                    }),\n                name: \"Average rating index\"\n            }\n        ];\n        for (const { operation, name } of indexOperations){\n            let retries = 3;\n            while(retries > 0){\n                try {\n                    await operation();\n                    break;\n                } catch (error) {\n                    retries--;\n                    if (retries === 0) {\n                        if (error.code !== 85) {\n                            errors.push(`Failed to create index ${name}: ${error.message}`);\n                        }\n                    } else {\n                        await new Promise((resolve)=>setTimeout(resolve, 1000));\n                    }\n                }\n            }\n        }\n        if (errors.length > 0) {\n            console.error(`Index initialization completed with warnings: ${errors.join(\"; \")}`);\n        }\n    } catch (error) {\n        console.error(`Index initialization error: ${error.message}`);\n    }\n}\nasync function checkAndCreateReviews(db) {\n    const collection = db.collection(\"recipes\");\n    try {\n        const recipesWithoutReviews = await collection.find({\n            reviews: {\n                $exists: false\n            }\n        }).toArray();\n        if (recipesWithoutReviews.length > 0) {\n            const updatePromises = recipesWithoutReviews.map((recipe)=>{\n                return collection.updateOne({\n                    _id: recipe._id\n                }, {\n                    $set: {\n                        reviews: []\n                    }\n                } // Create an empty array for reviews\n                );\n            });\n            await Promise.all(updatePromises);\n            console.log(`${updatePromises.length} recipes updated with empty reviews array.`);\n        } else {\n            console.log(\"No recipes without reviews found.\");\n        }\n    } catch (error) {\n        console.error(`Error checking and creating reviews: ${error.message}`);\n    }\n}\nmodule.exports = connectToDatabase;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./db.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute&page=%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Frecipes%2F%5Bid%5D%2Freviews%2Froute.js&appDir=C%3A%5CUsers%5CSoftware.Engineer51%5CDocuments%5CGitHub%5CASE_2024_GROUP_D%5CASE_2024_GROUP_D%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CSoftware.Engineer51%5CDocuments%5CGitHub%5CASE_2024_GROUP_D%5CASE_2024_GROUP_D&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();